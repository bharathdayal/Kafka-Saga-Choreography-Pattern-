server.port=8093

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notificationkafka
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Disable auto-commit (for manual commit after successful processing)
spring.kafka.consumer.enable-auto-commit=false

spring.kafka.listener.ack-mode=manual

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# kafka Producer Delivery guarantees
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3

# kafka Producer Idempotence (to avoid duplicate messages)
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.request.timeout.ms=20000


resilience4j.circuitbreaker.instances.kafkaProducerCB.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.kafkaProducerCB.failureRateThreshold=50
resilience4j.circuitbreaker.instances.kafkaProducerCB.slidingWindowSize=10
resilience4j.circuitbreaker.instances.kafkaProducerCB.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.kafkaProducerCB.waitDurationInOpenState=5s

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/kafka_log
spring.datasource.username=root
spring.datasource.password=#########
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true

